
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Foundation)
import Foundation

@available(macOS 10.7, *)
@available(iOS 5.0, *)
extension Modify.DynamicMemberWrap where T: NSUbiquitousKeyValueStore {

    @discardableResult
    public func removeObject(forKey aKey: Swift.String) -> Self {
        self.value.removeObject(forKey: aKey)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func set(_ aData: Foundation.Data?, forKey aKey: Swift.String) -> Self {
        self.value.set(aData, forKey: aKey)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func set(_ aDictionary: [Swift.String : Any]?, forKey aKey: Swift.String) -> Self {
        self.value.set(aDictionary, forKey: aKey)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func set(_ aString: Swift.String?, forKey aKey: Swift.String) -> Self {
        self.value.set(aString, forKey: aKey)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func set(_ anArray: [Any]?, forKey aKey: Swift.String) -> Self {
        self.value.set(anArray, forKey: aKey)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func set(_ anObject: Any?, forKey aKey: Swift.String) -> Self {
        self.value.set(anObject, forKey: aKey)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func set(_ value: Swift.Bool, forKey aKey: Swift.String) -> Self {
        self.value.set(value, forKey: aKey)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func set(_ value: Swift.Double, forKey aKey: Swift.String) -> Self {
        self.value.set(value, forKey: aKey)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func set(_ value: Swift.Int64, forKey aKey: Swift.String) -> Self {
        self.value.set(value, forKey: aKey)
        return Modify.DynamicMemberWrap(self.value)
    }

}

@available(iOS 5.0, *)
@available(macOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSUbiquitousKeyValueStore {
    
}

@available(macOS 10.7, *)
@available(iOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSUbiquitousKeyValueStore {

}

#endif
