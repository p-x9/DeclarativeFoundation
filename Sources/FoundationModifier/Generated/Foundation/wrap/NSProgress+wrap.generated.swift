
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Foundation)
import Foundation

@available(macOS 10.9, *)
@available(iOS 7.0, *)
extension Modify.DynamicMemberWrap where T: Progress {

    @available(macOS 10.13, *)
    @discardableResult
    public func __performAsCurrent(withPendingUnitCount unitCount: Swift.Int64, using work: () -> Swift.Void) -> Self {
        self.value.__performAsCurrent(withPendingUnitCount: unitCount, using: work)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS 10.11, *)
    @discardableResult
    public func addChild(_ child: Foundation.Progress, withPendingUnitCount inUnitCount: Swift.Int64) -> Self {
        self.value.addChild(child, withPendingUnitCount: inUnitCount)
        return Modify.DynamicMemberWrap(self.value)
    }

    @_unavailableFromAsync(message: "Progress for the current thread cannot be used in async contexts.")
    public func becomeCurrent(withPendingUnitCount unitCount: Swift.Int64) -> Self {
        self.value.becomeCurrent(withPendingUnitCount: unitCount)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func cancel() -> Self {
        self.value.cancel()
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func pause() -> Self {
        self.value.pause()
        return Modify.DynamicMemberWrap(self.value)
    }

    @_unavailableFromAsync(message: "Progress for the current thread cannot be used in async contexts.")
    public func resignCurrent() -> Self {
        self.value.resignCurrent()
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS 10.11, *)
    @discardableResult
    public func resume() -> Self {
        self.value.resume()
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func setUserInfoObject(_ objectOrNil: Any?, forKey key: Foundation.ProgressUserInfoKey) -> Self {
        self.value.setUserInfoObject(objectOrNil, forKey: key)
        return Modify.DynamicMemberWrap(self.value)
    }

}

@available(iOS 7.0, *)
@available(macOS, unavailable)
extension Modify.DynamicMemberWrap where T: Progress {
    
}

@available(macOS 10.9, *)
@available(iOS, unavailable)
extension Modify.DynamicMemberWrap where T: Progress {

}

#endif
