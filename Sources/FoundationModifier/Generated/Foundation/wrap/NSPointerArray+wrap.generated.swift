
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Foundation)
import Foundation

@available(macOS 10.5, *)
@available(iOS 6.0, *)
extension Modify.DynamicMemberWrap where T: NSPointerArray {

    @discardableResult
    public func addPointer(_ pointer: Swift.UnsafeMutableRawPointer?) -> Self {
        self.value.addPointer(pointer)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func compact() -> Self {
        self.value.compact()
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS 10.5, *)
    @discardableResult
    public func encode(with coder: Foundation.NSCoder) -> Self {
        self.value.encode(with: coder)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func insertPointer(_ item: Swift.UnsafeMutableRawPointer?, at index: Swift.Int) -> Self {
        self.value.insertPointer(item, at: index)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func removePointer(at index: Swift.Int) -> Self {
        self.value.removePointer(at: index)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func replacePointer(at index: Swift.Int, withPointer item: Swift.UnsafeMutableRawPointer?) -> Self {
        self.value.replacePointer(at: index, withPointer: item)
        return Modify.DynamicMemberWrap(self.value)
    }

}

@available(iOS 6.0, *)
@available(macOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSPointerArray {
    
}

@available(macOS 10.5, *)
@available(iOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSPointerArray {

}

#endif
