
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Foundation)
import Foundation

extension Modify.DynamicMemberWrap where T: ProcessInfo {

    @available(macOS 10.9, *)
    @discardableResult
    public func endActivity(_ activity: ObjectiveC.NSObjectProtocol) -> Self {
        self.value.endActivity(activity)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS 10.9, *)
    @discardableResult
    public func performActivity(options: Foundation.ProcessInfo.ActivityOptions = [], reason: Swift.String, using block: @escaping () -> Swift.Void) -> Self {
        self.value.performActivity(options: options, reason: reason, using: block)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS, unavailable)
    @discardableResult
    public func performExpiringActivity(withReason reason: Swift.String, using block: @escaping @Sendable (Swift.Bool) -> Swift.Void) -> Self {
        self.value.performExpiringActivity(withReason: reason, using: block)
        return Modify.DynamicMemberWrap(self.value)
    }

}


@available(macOS, unavailable)
extension Modify.DynamicMemberWrap where T: ProcessInfo {
    
}


@available(iOS, unavailable)
extension Modify.DynamicMemberWrap where T: ProcessInfo {

}

#endif
