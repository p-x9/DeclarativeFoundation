
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Foundation)
import Foundation

extension Modify.DynamicMemberWrap where T: NSLinguisticTagger {

    @available(macOS, introduced: 10.7, deprecated: 100000, message: "All NSLinguisticTagger API should be replaced with NaturalLanguage.framework API")
    @available(iOS, introduced: 5.0, deprecated: 100000, message: "All NSLinguisticTagger API should be replaced with NaturalLanguage.framework API")
    public func enumerateTags(in range: Foundation.NSRange, scheme tagScheme: Foundation.NSLinguisticTagScheme, options opts: Foundation.NSLinguisticTagger.Options = [], using block: (Foundation.NSLinguisticTag?, Foundation.NSRange, Foundation.NSRange, Swift.UnsafeMutablePointer<ObjectiveC.ObjCBool>) -> Swift.Void) -> Self {
        self.value.enumerateTags(in: range, scheme: tagScheme, options: opts, using: block)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS, introduced: 10.13, deprecated: 100000, message: "All NSLinguisticTagger API should be replaced with NaturalLanguage.framework API")
    @available(iOS, introduced: 11.0, deprecated: 100000, message: "All NSLinguisticTagger API should be replaced with NaturalLanguage.framework API")
    public func enumerateTags(in range: Foundation.NSRange, unit: Foundation.NSLinguisticTaggerUnit, scheme: Foundation.NSLinguisticTagScheme, options: Foundation.NSLinguisticTagger.Options = [], using block: (Foundation.NSLinguisticTag?, Foundation.NSRange, Swift.UnsafeMutablePointer<ObjectiveC.ObjCBool>) -> Swift.Void) -> Self {
        self.value.enumerateTags(in: range, unit: unit, scheme: scheme, options: options, using: block)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS, introduced: 10.7, deprecated: 100000, message: "All NSLinguisticTagger API should be replaced with NaturalLanguage.framework API")
    @available(iOS, introduced: 5.0, deprecated: 100000, message: "All NSLinguisticTagger API should be replaced with NaturalLanguage.framework API")
    public func setOrthography(_ orthography: Foundation.NSOrthography?, range: Foundation.NSRange) -> Self {
        self.value.setOrthography(orthography, range: range)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS, introduced: 10.7, deprecated: 100000, message: "All NSLinguisticTagger API should be replaced with NaturalLanguage.framework API")
    @available(iOS, introduced: 5.0, deprecated: 100000, message: "All NSLinguisticTagger API should be replaced with NaturalLanguage.framework API")
    public func stringEdited(in newRange: Foundation.NSRange, changeInLength delta: Swift.Int) -> Self {
        self.value.stringEdited(in: newRange, changeInLength: delta)
        return Modify.DynamicMemberWrap(self.value)
    }

}


@available(macOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSLinguisticTagger {
    
}


@available(iOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSLinguisticTagger {

}

#endif
