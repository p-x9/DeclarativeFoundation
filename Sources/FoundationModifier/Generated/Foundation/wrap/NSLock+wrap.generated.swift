
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Foundation)
import Foundation

extension Modify.DynamicMemberWrap where T: NSLock {

    @_unavailableFromAsync(message: "Use async-safe scoped locking instead")
    public func lock() -> Self {
        self.value.lock()
        return Modify.DynamicMemberWrap(self.value)
    }

    @_unavailableFromAsync(message: "Use async-safe scoped locking instead")
    public func unlock() -> Self {
        self.value.unlock()
        return Modify.DynamicMemberWrap(self.value)
    }

}


@available(macOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSLock {
    
}


@available(iOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSLock {

}

#endif
