
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Foundation)
import Foundation

extension Modify.DynamicMemberWrap where T: NSDictionary {

    @discardableResult
    public func encode(with coder: Foundation.NSCoder) -> Self {
        self.value.encode(with: coder)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS 10.6, *)
    @discardableResult
    public func enumerateKeysAndObjects(_ block: (Any, Any, Swift.UnsafeMutablePointer<ObjectiveC.ObjCBool>) -> Swift.Void) -> Self {
        self.value.enumerateKeysAndObjects(block)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS 10.6, *)
    @discardableResult
    public func enumerateKeysAndObjects(options opts: Foundation.NSEnumerationOptions = [], using block: (Any, Any, Swift.UnsafeMutablePointer<ObjectiveC.ObjCBool>) -> Swift.Void) -> Self {
        self.value.enumerateKeysAndObjects(options: opts, using: block)
        return Modify.DynamicMemberWrap(self.value)
    }

}


@available(macOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSDictionary {
    
}


@available(iOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSDictionary {

}

#endif
