
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Foundation)
import Foundation

@available(macOS 10.7, *)
@available(iOS 5.0, *)
extension Modify.DynamicMemberWrap where T: NSOrderedSet {

    @available(macOS 10.7, *)
    @discardableResult
    @_disfavoredOverload
    public func encode(with coder: Foundation.NSCoder) -> T {
        self.value.encode(with: coder)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func enumerateObjects(_ block: (Any, Swift.Int, Swift.UnsafeMutablePointer<ObjectiveC.ObjCBool>) -> Swift.Void) -> T {
        self.value.enumerateObjects(block)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func enumerateObjects(at s: Foundation.IndexSet, options opts: Foundation.NSEnumerationOptions = [], using block: (Any, Swift.Int, Swift.UnsafeMutablePointer<ObjectiveC.ObjCBool>) -> Swift.Void) -> T {
        self.value.enumerateObjects(at: s, options: opts, using: block)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func enumerateObjects(options opts: Foundation.NSEnumerationOptions = [], using block: (Any, Swift.Int, Swift.UnsafeMutablePointer<ObjectiveC.ObjCBool>) -> Swift.Void) -> T {
        self.value.enumerateObjects(options: opts, using: block)
        return self.value
    }

}

@available(iOS 5.0, *)
@available(macOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSOrderedSet {
    
}

@available(macOS 10.7, *)
@available(iOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSOrderedSet {

}

#endif
