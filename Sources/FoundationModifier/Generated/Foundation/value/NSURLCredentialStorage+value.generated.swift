
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Foundation)
import Foundation

@available(macOS 10.2, *)
@available(iOS 2.0, *)
extension Modify.DynamicMemberWrap where T: URLCredentialStorage {

    @available(macOS 10.10, *)
    @discardableResult
    @_disfavoredOverload
    public func getCredentials(for protectionSpace: Foundation.URLProtectionSpace, task: Foundation.URLSessionTask, completionHandler: @escaping @Sendable ([Swift.String : Foundation.URLCredential]?) -> Swift.Void) -> T {
        self.value.getCredentials(for: protectionSpace, task: task, completionHandler: completionHandler)
        return self.value
    }

    @available(macOS 10.10, *)
    @discardableResult
    @_disfavoredOverload
    public func getDefaultCredential(for space: Foundation.URLProtectionSpace, task: Foundation.URLSessionTask, completionHandler: @escaping @Sendable (Foundation.URLCredential?) -> Swift.Void) -> T {
        self.value.getDefaultCredential(for: space, task: task, completionHandler: completionHandler)
        return self.value
    }

    @available(macOS 10.10, *)
    @discardableResult
    @_disfavoredOverload
    public func remove(_ credential: Foundation.URLCredential, for protectionSpace: Foundation.URLProtectionSpace, options: [Swift.String : Any]? = nil, task: Foundation.URLSessionTask) -> T {
        self.value.remove(credential, for: protectionSpace, options: options, task: task)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func remove(_ credential: Foundation.URLCredential, for space: Foundation.URLProtectionSpace) -> T {
        self.value.remove(credential, for: space)
        return self.value
    }

    @available(macOS 10.9, *)
    @discardableResult
    @_disfavoredOverload
    public func remove(_ credential: Foundation.URLCredential, for space: Foundation.URLProtectionSpace, options: [Swift.String : Any]? = nil) -> T {
        self.value.remove(credential, for: space, options: options)
        return self.value
    }

    @available(macOS 10.10, *)
    @discardableResult
    @_disfavoredOverload
    public func set(_ credential: Foundation.URLCredential, for protectionSpace: Foundation.URLProtectionSpace, task: Foundation.URLSessionTask) -> T {
        self.value.set(credential, for: protectionSpace, task: task)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func set(_ credential: Foundation.URLCredential, for space: Foundation.URLProtectionSpace) -> T {
        self.value.set(credential, for: space)
        return self.value
    }

    @available(macOS 10.10, *)
    @discardableResult
    @_disfavoredOverload
    public func setDefaultCredential(_ credential: Foundation.URLCredential, for protectionSpace: Foundation.URLProtectionSpace, task: Foundation.URLSessionTask) -> T {
        self.value.setDefaultCredential(credential, for: protectionSpace, task: task)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func setDefaultCredential(_ credential: Foundation.URLCredential, for space: Foundation.URLProtectionSpace) -> T {
        self.value.setDefaultCredential(credential, for: space)
        return self.value
    }

}

@available(iOS 2.0, *)
@available(macOS, unavailable)
extension Modify.DynamicMemberWrap where T: URLCredentialStorage {
    
}

@available(macOS 10.2, *)
@available(iOS, unavailable)
extension Modify.DynamicMemberWrap where T: URLCredentialStorage {

}

#endif
