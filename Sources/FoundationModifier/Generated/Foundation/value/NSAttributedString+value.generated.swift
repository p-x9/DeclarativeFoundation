
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Foundation)
import Foundation

@available(macOS 10.0, *)
@available(iOS 3.2, *)
extension Modify.DynamicMemberWrap where T: NSAttributedString {

    @available(macOS 10.0, *)
    @discardableResult
    @_disfavoredOverload
    public func encode(with coder: Foundation.NSCoder) -> T {
        self.value.encode(with: coder)
        return self.value
    }

    @available(macOS 10.6, *)
    @discardableResult
    @_disfavoredOverload
    public func enumerateAttribute(_ attrName: Foundation.NSAttributedString.Key, in enumerationRange: Foundation.NSRange, options opts: Foundation.NSAttributedString.EnumerationOptions = [], using block: (Any?, Foundation.NSRange, Swift.UnsafeMutablePointer<ObjectiveC.ObjCBool>) -> Swift.Void) -> T {
        self.value.enumerateAttribute(attrName, in: enumerationRange, options: opts, using: block)
        return self.value
    }

    @available(macOS 10.6, *)
    @discardableResult
    @_disfavoredOverload
    public func enumerateAttributes(in enumerationRange: Foundation.NSRange, options opts: Foundation.NSAttributedString.EnumerationOptions = [], using block: ([Foundation.NSAttributedString.Key : Any], Foundation.NSRange, Swift.UnsafeMutablePointer<ObjectiveC.ObjCBool>) -> Swift.Void) -> T {
        self.value.enumerateAttributes(in: enumerationRange, options: opts, using: block)
        return self.value
    }

}

@available(iOS 3.2, *)
@available(macOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSAttributedString {
    
}

@available(macOS 10.0, *)
@available(iOS, unavailable)
extension Modify.DynamicMemberWrap where T: NSAttributedString {

}

#endif
